   Compiling rego v0.1.0 (/home/miyagley/Code/azureiot/rego)
error: failed to run custom build command for `rego v0.1.0 (/home/miyagley/Code/azureiot/rego)`

Caused by:
  process didn't exit successfully: `/home/miyagley/Code/azureiot/rego/target/debug/build/rego-7e0a7bd98ea1f5b0/build-script-build` (exit code: 1)
--- stdout
processing file `/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop`
/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"("` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"("` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"["` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"["` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"false"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"false"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"float-literal"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"float-literal"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"id"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"id"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"integer-literal"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"integer-literal"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"null"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"null"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"set"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"set"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"string-literal"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"string-literal"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"true"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"true"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"{"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"{"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"\n"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"\r"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"!="` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"&"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"("` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `")"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"*"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"+"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `","` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"-"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"/"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `":"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `";"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"<"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"<="` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"="` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"=="` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `">"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `">="` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"["` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"]"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"false"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"float-literal"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"id"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"integer-literal"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"null"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"set"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"string-literal"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"true"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"{"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"|"` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Ambiguous grammar detected

  The following symbols can be reduced in two ways:
    "{" "}"

  They could be reduced like so:
    "{" ╷                    ╷ "}"
    │   └─Comma<ObjectEntry>─┘   │
    └─Object─────────────────────┘

  Alternatively, they could be reduced like so:
    "{" ╷             ╷ "}"
    │   └─Comma<Term>─┘   │
    └─NonEmptySet─────────┘

  LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for advice on making your grammar unambiguous.

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (*) (ObjectEntry ",")+ ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (ObjectEntry ",")+ = (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) (Term ",")+ Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  (Term ",")+ = (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) (ObjectEntry ",")+ ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) (Term ",")+ Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = "{" (*) Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = "{" (*) Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `EOF` we can reduce to a `Comma<ObjectEntry>` but we can also reduce to a `Comma<Term>`

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:64:5: 64:33: Conflict detected

    when in this state:
  (QuerySep Literal)+ = (QuerySep Literal)+ (*) QuerySep Literal ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Query = Literal (QuerySep Literal)+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  QuerySep = (*) "\n" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  QuerySep = (*) "\r" "\n" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  QuerySep = (*) ";" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"\n"` we can reduce to a `Query` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:64:5: 64:33: Conflict detected

    when in this state:
  (QuerySep Literal)+ = (QuerySep Literal)+ (*) QuerySep Literal ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Query = Literal (QuerySep Literal)+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  QuerySep = (*) "\n" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  QuerySep = (*) "\r" "\n" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  QuerySep = (*) ";" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"\r"` we can reduce to a `Query` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:64:5: 64:33: Conflict detected

    when in this state:
  (QuerySep Literal)+ = (QuerySep Literal)+ (*) QuerySep Literal ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Query = Literal (QuerySep Literal)+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  QuerySep = (*) "\n" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  QuerySep = (*) "\r" "\n" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  QuerySep = (*) ";" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `";"` we can reduce to a `Query` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"("` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"["` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"false"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"float-literal"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"id"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"integer-literal"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"null"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"set"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"string-literal"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"true"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ (*) Term "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Array = (*) "[" Comma<Term> "]" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ (*) Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  EmptySet = (*) "set" "(" ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  NonEmptySet = (*) "{" Comma<Term> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Object = (*) "{" Comma<ObjectEntry> "}" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) EmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Set = (*) NonEmptySet ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Array ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Object ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Ref ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Scalar ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Set ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) Var ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = (*) "(" Expr ")" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Var = (*) "id" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"{"` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = Term (*) "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = Term (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `","` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (ObjectEntry ",")+ (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"false"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (ObjectEntry ",")+ (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"float-literal"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (ObjectEntry ",")+ (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"integer-literal"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (ObjectEntry ",")+ (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"null"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (ObjectEntry ",")+ (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"string-literal"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (ObjectEntry ",")+ (*) ObjectEntry "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "false" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Bool = (*) "true" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ (*) ObjectEntry ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "float-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Number = (*) "integer-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  ObjectEntry = (*) Scalar ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Bool ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) Number ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) String ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Scalar = (*) "null" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  String = (*) "string-literal" ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `"true"` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = ObjectEntry (*) "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = ObjectEntry (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `","` we can reduce to a `Comma<ObjectEntry>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:119:5: 119:10: Conflict detected

    when in this state:
  ObjectEntry = Scalar (*) ":" Term ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Term = Scalar (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `":"` we can reduce to a `Term` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:126:18: 126:28: Conflict detected

    when in this state:
  (Term ",")+ = (Term ",")+ Term (*) "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<Term> = (Term ",")+ Term (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `","` we can reduce to a `Comma<Term>` but we can also shift

/home/miyagley/Code/azureiot/rego/src/grammar.lalrpop:137:18: 137:35: Conflict detected

    when in this state:
  (ObjectEntry ",")+ = (ObjectEntry ",")+ ObjectEntry (*) "," ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]
  Comma<ObjectEntry> = (ObjectEntry ",")+ ObjectEntry (*) ["\n", "\r", "!=", "&", "(", ")", "*", "+", ",", "-", "/", ":", ";", "<", "<=", "=", "==", ">", ">=", "[", "]", "false", "float-literal", "id", "integer-literal", "null", "set", "string-literal", "true", "{", "|", "}", EOF]

  and looking at a token `","` we can reduce to a `Comma<ObjectEntry>` but we can also shift

