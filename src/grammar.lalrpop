use ordered_float::NotNan;

use crate::Location;
use crate::lexer::Error;
use crate::token::Token;

grammar<'input>(input: &'input str);

pub Expr: () = {
    Number
};

Number: () = {
    "integer"
}

extern {
    type Location = Location;
    type Error = Error;

    enum Token<'input> {
        "null" => Token::Null,
        "integer" => Token::IntLiteral(<i64>),
        "float" => Token::FloatLiteral(<NotNan<f64>>),
    }
}
